#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]
shiro.loginUrl = /api/v1/authenticate
#authc.successUrl=/app/v1/success

multiTenantRealm=com.eis.security.multitenancy.shiro.MultiTenantRealm

#corsBasicAuthFilter = com.eis.security.rest.api.filter.ShiroCORSBasicAuthFilter
#corsFormFilter = com.eis.security.rest.api.filter.ShiroCORSRestFormAuthFilter
#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager = $sessionManager

#securityManager.sessionManager.sessionIdCookie.refName=envisionSession

cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager


# ===== Remove when establish custom realm is working ====

#[users]
# format: username = password, role1, role2, ..., roleN


#[roles]
# format: roleName = permission1, permission2, ..., permissionN
#admin = *
#schwartz = lightsaber:*
#goodguy = winnebago:drive:eagle5

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
#/api/v1/** = noSessionCreation, corsBasicAuthFilter
/api/v1/register=anon
#/api/v1/** = corsFormFilter
#/api/v1/** = corsBasicAuthFilter
#/api/v1/** = authc


#/logout = logout
#/app/** = authc
#/api/** = authc, roles[b2bClient], perms["remote:invoke:lan,wan"]